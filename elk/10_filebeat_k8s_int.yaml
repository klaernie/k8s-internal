apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: k8sbeat
  namespace: elk
spec:
  type: filebeat
  # renovate: datasource=github-releases depName=beats packageName=elastic/beats
  version: 8.15.3
  config:
    filebeat.autodiscover.providers:
      - node: ${NODE_NAME}
        type: kubernetes
        hints:
          enabled: true
          default_config:
            type: container
            paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
    processors:
      #- decode_json_fields:
      #    when:
      #      regexp:
      #        message: '^\{.*\}$'
      #    fields: ["message" ]
      #    process_array: true
      #    max_depth: 10
      #    expand_keys: true
      #    target: "json"
      #    overwrite_keys: false
      #    add_error_key: true
      #- drop_fields:
      #    fields:
      #      - message
      #    when:
      #      regexp:
      #        message: '^\{.*\}$'
      #- copy_fields:
      #    fields:
      #      - from: json.message
      #        to: message
      #    when:
      #      not:
      #        has_fields:
      #          - message
      - add_fields:
          target: ''
          fields:
            data_stream.type: logs
            data_stream.dataset: k8s
            data_stream.namespace: int
      - add_cloud_metadata: {}
      - add_host_metadata: {}
    setup.template.enabled: false
    setup.ilm.enabled: false
    output.logstash:
      hosts:
        - beats-ls-beats
  daemonSet:
    podTemplate:
      spec:
        runtimeClassName: host-access-granted
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
          - name: filebeat
            securityContext:
              runAsUser: 0
              # If using Red Hat OpenShift uncomment this:
              #privileged: true
            volumeMounts:
              - name: varlogcontainers
                mountPath: /var/log/containers
              - name: varlogpods
                mountPath: /var/log/pods
              - name: varlibdockercontainers
                mountPath: /var/lib/docker/containers
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
        volumes:
          - name: varlogcontainers
            hostPath:
              path: /var/log/containers
          - name: varlogpods
            hostPath:
              path: /var/log/pods
          - name: varlibdockercontainers
            hostPath:
              path: /var/lib/docker/containers
        tolerations:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: elk
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elk
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
